/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/v1/block/number/latest": {
    /**
     * Get latest block number
     * @description Get the latest block height of blockchain network.
     */
    get: operations["GetBlockNumberLatest"];
  };
  "/v1/block/detail": {
    /**
     * Get block by number
     * @description Get the detail of a block by the given block humber.
     */
    get: operations["GetBlockDetail"];
  };
  "/v1/tx/detail": {
    /**
     * Get transaction
     * @description Get the detail of a transaction given the transaction hash.
     *
     * Provide the param "hash" or ("block_number" and "tx_index"). If both params are provided,
     * "hash" will be used.
     */
    get: operations["GetTxDetail"];
  };
  "/v1/account/txs": {
    /**
     * Get transactions by account
     * @description Returns the transactions from the address.
     */
    get: operations["GetAccountTxs"];
  };
  "/v1/contract/events": {
    /**
     * Get events by contract
     * @description Gets the list of events for the specified contract.
     */
    get: operations["GetContractEvents"];
  };
  "/v1/contract/call": {
    /**
     * Contract call
     * @description Calls a specific function for the specified contract.
     */
    post: operations["ContractCall"];
  };
  "/v1/account/balance": {
    /**
     * Get native token balances
     * @description Returns the balance for a specified address.
     */
    get: operations["GetAccountBalance"];
  };
  "/v1/account/tokens": {
    /**
     * Get ERC20 token balances
     * @description Retrieve all token balances for all ERC20 tokens for a specified address.
     *
     * By default, it will return all token balances for all ERC20 tokens that the address has ever received.
     * You can specify a contract address to check the balance of a non-standard contract.
     */
    get: operations["GetAccountTokens"];
  };
  "/v1/account/portfolios": {
    /**
     * Get portfolios in the protocol owned by address
     * @description Returns a list of portfolios for the specified address.
     */
    get: operations["GetAccountPortfolios"];
  };
  "/v1/account/nfts": {
    /**
     * Get NFTs owned by address
     * @description Get the list of NFTs owned by an account.
     */
    get: operations["GetAccountNFTs"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** BlockDetail */
    BlockDetail: {
      /** Number */
      number: number;
      /** Hash */
      hash: string;
      /** Parent Hash */
      parent_hash: string;
      /** Timestamp */
      timestamp: string;
      /** Difficulty */
      difficulty: string;
      /** Extra Data */
      extra_data: string;
      /** Gas Limit */
      gas_limit: number;
      /** Gas Used */
      gas_used: number;
      /** Base Fee Per Gas */
      base_fee_per_gas: number;
      /** Miner */
      miner: string;
      /** Mix Hash */
      mix_hash: string;
      /** Nonce */
      nonce: string;
      /** Receipts Root */
      receipts_root: string;
      /** Sha3 Uncles */
      sha3_uncles: string;
      /** Size */
      size: number;
      /** State Root */
      state_root: string;
      /** Transactions Root */
      transactions_root: string;
      /** Transactions Count */
      transactions_count: number;
      /** Uncles Count */
      uncles_count: number;
    };
    /**
     * ContractCallBody
     * @example {
     *   "chain_id": 1,
     *   "contract_address": "0xed5af388653567af2f388e6224dc7c4b3241c544",
     *   "function_name": "name",
     *   "abi": "[\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"maxBatchSize_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"collectionSize_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amountForAuctionAndDev_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amountForDevs_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"approved\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"ApprovalForAll\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"previousOwner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"OwnershipTransferred\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"AUCTION_DROP_INTERVAL\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"AUCTION_DROP_PER_STEP\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"AUCTION_END_PRICE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"AUCTION_PRICE_CURVE_LENGTH\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"AUCTION_START_PRICE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowlist\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"allowlistMint\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"amountForAuctionAndDev\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"amountForDevs\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"quantity\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"auctionMint\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"quantity\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"devMint\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"mintlistPriceWei\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"publicPriceWei\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"internalType\": \"uint32\",\n        \"name\": \"publicSaleStartTime\",\n        \"type\": \"uint32\"\n      }\n    ],\n    \"name\": \"endAuctionAndSetupNonAuctionSaleInfo\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getApproved\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_saleStartTime\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getAuctionPrice\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getOwnershipData\",\n    \"outputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"address\",\n            \"name\": \"addr\",\n            \"type\": \"address\"\n          },\n          {\n            \"internalType\": \"uint64\",\n            \"name\": \"startTimestamp\",\n            \"type\": \"uint64\"\n          }\n        ],\n        \"internalType\": \"struct ERC721A.TokenOwnership\",\n        \"name\": \"\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isApprovedForAll\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"publicPriceWei\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"publicSaleKey\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"publicSaleStartTime\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"isPublicSaleOn\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"maxPerAddressDuringMint\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"nextOwnerToExplicitlySet\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"numberMinted\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ownerOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"quantity\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"callerPublicSaleKey\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"publicSaleMint\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"renounceOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"_data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"saleConfig\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint32\",\n        \"name\": \"auctionSaleStartTime\",\n        \"type\": \"uint32\"\n      },\n      {\n        \"internalType\": \"uint32\",\n        \"name\": \"publicSaleStartTime\",\n        \"type\": \"uint32\"\n      },\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"mintlistPrice\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"internalType\": \"uint64\",\n        \"name\": \"publicPrice\",\n        \"type\": \"uint64\"\n      },\n      {\n        \"internalType\": \"uint32\",\n        \"name\": \"publicSaleKey\",\n        \"type\": \"uint32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"addresses\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"numSlots\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"name\": \"seedAllowlist\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"setApprovalForAll\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint32\",\n        \"name\": \"timestamp\",\n        \"type\": \"uint32\"\n      }\n    ],\n    \"name\": \"setAuctionSaleStartTime\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"baseURI\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"setBaseURI\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"quantity\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"setOwnersExplicit\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint32\",\n        \"name\": \"key\",\n        \"type\": \"uint32\"\n      }\n    ],\n    \"name\": \"setPublicSaleKey\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenByIndex\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenOfOwnerByIndex\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenURI\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"transferOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"withdrawMoney\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]\n",
     *   "to_block": "latest"
     * }
     */
    ContractCallBody: {
      /** Chain Id */
      chain_id: number;
      /** Contract Address */
      contract_address: string;
      /** Function Name */
      function_name: string;
      /** Abi */
      abi: string;
      /** Params */
      params: unknown[];
      /** To Block */
      to_block: string;
    };
    /** ContractEventsData */
    ContractEventsData: {
      /** Block Number */
      block_number: number;
      /** Function */
      function: string;
      /** Method Id */
      method_id: string;
      /** Transaction Hash */
      transaction_hash: string;
      /** Transaction Index */
      transaction_index: number;
    };
    /** ErrorMessage */
    ErrorMessage: {
      /** Code */
      code: number;
      /** Message */
      message: string;
    };
    /** GetLastBlockNumberData */
    GetLastBlockNumberData: {
      /** Number */
      number: number;
      /** Hash */
      hash: string;
    };
    /** ResponseContractCall */
    ResponseContractCall: {
      /**
       * Code
       * @default 0
       */
      code?: number;
      /**
       * Message
       * @default success
       */
      message?: string;
      /** Data */
      data: unknown[];
    };
    /** ResponseContractEvents */
    ResponseContractEvents: {
      /**
       * Code
       * @default 0
       */
      code?: number;
      /**
       * Message
       * @default success
       */
      message?: string;
      /** Data */
      data: {
          /** Block Number */
          block_number: number;
          /** Function */
          function: string;
          /** Method Id */
          method_id: string;
          /** Transaction Hash */
          transaction_hash: string;
          /** Transaction Index */
          transaction_index: number;
        }[];
      /** Next Page */
      next_page?: number;
      /** Count */
      count?: number;
    };
    /** ResponseGetAccountTxs */
    ResponseGetAccountTxs: {
      /**
       * Code
       * @default 0
       */
      code?: number;
      /**
       * Message
       * @default success
       */
      message?: string;
      /** Data */
      data: {
          /** Type */
          type: number;
          /** Status */
          status: number;
          /** Block Number */
          block_number: number;
          /** Block Timestamp */
          block_timestamp: string;
          /** Transaction Hash */
          transaction_hash: string;
          /** Transaction Index */
          transaction_index: number;
          /** From Address */
          from_address: string;
          /** To Address */
          to_address: string;
          /** Value */
          value: string;
          /** Input */
          input: string;
          /** Nonce */
          nonce: string;
          /** Contract Address */
          contract_address: string;
          /** Gas */
          gas: number;
          /** Gas Price */
          gas_price: number;
          /** Gas Used */
          gas_used: number;
          /** Effective Gas Price */
          effective_gas_price: number;
          /** Cumulative Gas Used */
          cumulative_gas_used: number;
          /** Max Fee Per Gas */
          max_fee_per_gas: number;
          /** Max Priority Fee Per Gas */
          max_priority_fee_per_gas: number;
          /** Tx Fee */
          tx_fee: number;
          /** Saving Fee */
          saving_fee: number;
          /** Burnt Fee */
          burnt_fee: number;
        }[];
      /** Next Page */
      next_page?: number;
      /** Count */
      count?: number;
    };
    /** ResponseGetBlockDetail */
    ResponseGetBlockDetail: {
      /**
       * Code
       * @default 0
       */
      code?: number;
      /**
       * Message
       * @default success
       */
      message?: string;
      /** BlockDetail */
      data: {
        /** Number */
        number: number;
        /** Hash */
        hash: string;
        /** Parent Hash */
        parent_hash: string;
        /** Timestamp */
        timestamp: string;
        /** Difficulty */
        difficulty: string;
        /** Extra Data */
        extra_data: string;
        /** Gas Limit */
        gas_limit: number;
        /** Gas Used */
        gas_used: number;
        /** Base Fee Per Gas */
        base_fee_per_gas: number;
        /** Miner */
        miner: string;
        /** Mix Hash */
        mix_hash: string;
        /** Nonce */
        nonce: string;
        /** Receipts Root */
        receipts_root: string;
        /** Sha3 Uncles */
        sha3_uncles: string;
        /** Size */
        size: number;
        /** State Root */
        state_root: string;
        /** Transactions Root */
        transactions_root: string;
        /** Transactions Count */
        transactions_count: number;
        /** Uncles Count */
        uncles_count: number;
      };
    };
    /** ResponseGetLastBlockNumber */
    ResponseGetLastBlockNumber: {
      /**
       * Code
       * @default 0
       */
      code?: number;
      /**
       * Message
       * @default success
       */
      message?: string;
      /** GetLastBlockNumberData */
      data: {
        /** Number */
        number: number;
        /** Hash */
        hash: string;
      };
    };
    /** ResponseGetTxDetail */
    ResponseGetTxDetail: {
      /**
       * Code
       * @default 0
       */
      code?: number;
      /**
       * Message
       * @default success
       */
      message?: string;
      /** TxDetail */
      data: {
        /** Type */
        type: number;
        /** Status */
        status: number;
        /** Block Number */
        block_number: number;
        /** Block Timestamp */
        block_timestamp: string;
        /** Transaction Hash */
        transaction_hash: string;
        /** Transaction Index */
        transaction_index: number;
        /** From Address */
        from_address: string;
        /** To Address */
        to_address: string;
        /** Value */
        value: string;
        /** Input */
        input: string;
        /** Nonce */
        nonce: string;
        /** Contract Address */
        contract_address: string;
        /** Gas */
        gas: number;
        /** Gas Price */
        gas_price: number;
        /** Gas Used */
        gas_used: number;
        /** Effective Gas Price */
        effective_gas_price: number;
        /** Cumulative Gas Used */
        cumulative_gas_used: number;
        /** Max Fee Per Gas */
        max_fee_per_gas: number;
        /** Max Priority Fee Per Gas */
        max_priority_fee_per_gas: number;
        /** Tx Fee */
        tx_fee: number;
        /** Saving Fee */
        saving_fee: number;
        /** Burnt Fee */
        burnt_fee: number;
      };
    };
    /** TxDetail */
    TxDetail: {
      /** Type */
      type: number;
      /** Status */
      status: number;
      /** Block Number */
      block_number: number;
      /** Block Timestamp */
      block_timestamp: string;
      /** Transaction Hash */
      transaction_hash: string;
      /** Transaction Index */
      transaction_index: number;
      /** From Address */
      from_address: string;
      /** To Address */
      to_address: string;
      /** Value */
      value: string;
      /** Input */
      input: string;
      /** Nonce */
      nonce: string;
      /** Contract Address */
      contract_address: string;
      /** Gas */
      gas: number;
      /** Gas Price */
      gas_price: number;
      /** Gas Used */
      gas_used: number;
      /** Effective Gas Price */
      effective_gas_price: number;
      /** Cumulative Gas Used */
      cumulative_gas_used: number;
      /** Max Fee Per Gas */
      max_fee_per_gas: number;
      /** Max Priority Fee Per Gas */
      max_priority_fee_per_gas: number;
      /** Tx Fee */
      tx_fee: number;
      /** Saving Fee */
      saving_fee: number;
      /** Burnt Fee */
      burnt_fee: number;
    };
    /** BaseDeFiPortfolio */
    BaseDeFiPortfolio: {
      /** Pool */
      pool: {
        /** Address */
        address: string;
        /**
         * Created At
         * Format: date-time
         */
        created_at: string;
      };
      /**
       * DeFiType
       * @description An enumeration.
       * @enum {string}
       */
      type: "liquidity" | "farming" | "locked" | "lending" | "deposit";
      /** Assets Deposited */
      assets_deposited: {
          /** DeFiAsset */
          asset: {
            /** Id */
            id: string;
            /** Logo Url */
            logo_url?: string;
            /**
             * Name
             * @default
             */
            name?: string;
            /**
             * Symbol
             * @default
             */
            symbol?: string;
            /**
             * Type
             * @default
             */
            type?: string;
          };
          /** Amount */
          amount: number;
          /**
           * Usd Value
           * @default 0
           */
          usd_value?: number;
        }[];
      /** Assets Rewarded */
      assets_rewarded?: {
          /** DeFiAsset */
          asset: {
            /** Id */
            id: string;
            /** Logo Url */
            logo_url?: string;
            /**
             * Name
             * @default
             */
            name?: string;
            /**
             * Symbol
             * @default
             */
            symbol?: string;
            /**
             * Type
             * @default
             */
            type?: string;
          };
          /** Amount */
          amount: number;
          /**
           * Usd Value
           * @default 0
           */
          usd_value?: number;
        }[];
      /**
       * Stats
       * @default {
       *   "usd_value": 0
       * }
       */
      stats?: {
        /**
         * Usd Value
         * @default 0
         */
        usd_value?: number;
      };
    };
    /** DeFiAsset */
    DeFiAsset: {
      /** Id */
      id: string;
      /** Logo Url */
      logo_url?: string;
      /**
       * Name
       * @default
       */
      name?: string;
      /**
       * Symbol
       * @default
       */
      symbol?: string;
      /**
       * Type
       * @default
       */
      type?: string;
    };
    /**
     * DeFiType
     * @description An enumeration.
     * @enum {string}
     */
    DeFiType: "liquidity" | "farming" | "locked" | "lending" | "deposit";
    /** NFTCollectionFloorPrice */
    NFTCollectionFloorPrice: {
      /**
       * Value
       * @description The ammount of the ERC-20 token.
       */
      value?: string;
      /**
       * Symbol
       * @description The symbol of the ERC-20 token.
       */
      symbol?: string;
      /**
       * Address
       * @description The address of the ERC-20 token.
       */
      address?: string;
    };
    /** NFTDetail */
    NFTDetail: {
      /**
       * Contract Address
       * @description The contract address
       */
      contract_address: string;
      /**
       * Erc Type
       * @description ERC standard related to the contract.
       */
      erc_type: string;
      /**
       * Metadata
       * @description The metadata of the item.
       */
      metadata?: Record<string, never>;
      /**
       * Mint Time
       * Format: date-time
       * @description The timestamp when the item was minted.
       */
      mint_time: string;
      /**
       * Mint Transaction Hash
       * @description The block number when the item was minted.
       */
      mint_transaction_hash: string;
      /**
       * Name
       * @description The name of the item.
       */
      name: string;
      /**
       * Owner
       * @description The user address who owns the item now (null if the item is an ERC-1155 NFT).
       */
      owner: string;
      /**
       * Symbol
       * @description The symbol of the NFT contract.
       */
      symbol: string;
      /**
       * Token Id
       * @description The token ID number of the item.
       */
      token_id: string;
      /**
       * Token Uri
       * @description The token URI of the item.
       */
      token_uri: string;
      /**
       * Image Uri
       * @description The image URI of the item.
       */
      image_uri: string;
      /**
       * Total
       * @description The total amount of the item.
       */
      total: number;
      /**
       * Total String
       * @description The total amount of item in string.
       */
      total_string: string;
      /**
       * Traits
       * @description List of traits of the item.
       */
      traits?: unknown;
      /**
       * Rarity Score
       * @description The rarity score for the item.
       */
      rarity_score?: number;
      /**
       * Rarity Rank
       * @description The rarity rank for the item.
       */
      rarity_rank?: number;
      /**
       * Floor Prices
       * @description List of floor prices.
       */
      floor_prices?: {
          /**
           * Value
           * @description The ammount of the ERC-20 token.
           */
          value?: string;
          /**
           * Symbol
           * @description The symbol of the ERC-20 token.
           */
          symbol?: string;
          /**
           * Address
           * @description The address of the ERC-20 token.
           */
          address?: string;
        }[];
    };
    /** Pool */
    Pool: {
      /** Address */
      address: string;
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
    };
    /** PortfolioAssetObject */
    PortfolioAssetObject: {
      /** DeFiAsset */
      asset: {
        /** Id */
        id: string;
        /** Logo Url */
        logo_url?: string;
        /**
         * Name
         * @default
         */
        name?: string;
        /**
         * Symbol
         * @default
         */
        symbol?: string;
        /**
         * Type
         * @default
         */
        type?: string;
      };
      /** Amount */
      amount: number;
      /**
       * Usd Value
       * @default 0
       */
      usd_value?: number;
    };
    /** PortfolioStatus */
    PortfolioStatus: {
      /**
       * Usd Value
       * @default 0
       */
      usd_value?: number;
    };
    /** ProjectPortfolios */
    ProjectPortfolios: {
      /** Id */
      id: string;
      /** Name */
      name: string;
      /** Blockchain */
      blockchain: string;
      /** Logo Url */
      logo_url?: string;
      /** Portfolios */
      portfolios: ({
          /** Pool */
          pool: {
            /** Address */
            address: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
          };
          /**
           * DeFiType
           * @description An enumeration.
           * @enum {string}
           */
          type: "liquidity" | "farming" | "locked" | "lending" | "deposit";
          /** Assets Deposited */
          assets_deposited: {
              /** DeFiAsset */
              asset: {
                /** Id */
                id: string;
                /** Logo Url */
                logo_url?: string;
                /**
                 * Name
                 * @default
                 */
                name?: string;
                /**
                 * Symbol
                 * @default
                 */
                symbol?: string;
                /**
                 * Type
                 * @default
                 */
                type?: string;
              };
              /** Amount */
              amount: number;
              /**
               * Usd Value
               * @default 0
               */
              usd_value?: number;
            }[];
          /** Assets Rewarded */
          assets_rewarded?: {
              /** DeFiAsset */
              asset: {
                /** Id */
                id: string;
                /** Logo Url */
                logo_url?: string;
                /**
                 * Name
                 * @default
                 */
                name?: string;
                /**
                 * Symbol
                 * @default
                 */
                symbol?: string;
                /**
                 * Type
                 * @default
                 */
                type?: string;
              };
              /** Amount */
              amount: number;
              /**
               * Usd Value
               * @default 0
               */
              usd_value?: number;
            }[];
          /**
           * Stats
           * @default {
           *   "usd_value": 0
           * }
           */
          stats?: {
            /**
             * Usd Value
             * @default 0
             */
            usd_value?: number;
          };
        })[];
    };
    /** ResponseAccountPortfolios */
    ResponseAccountPortfolios: {
      /**
       * Code
       * @default 0
       */
      code?: number;
      /**
       * Message
       * @default ok
       */
      message?: string;
      /** Data */
      data: ({
          /** Id */
          id: string;
          /** Name */
          name: string;
          /** Blockchain */
          blockchain: string;
          /** Logo Url */
          logo_url?: string;
          /** Portfolios */
          portfolios: ({
              /** Pool */
              pool: {
                /** Address */
                address: string;
                /**
                 * Created At
                 * Format: date-time
                 */
                created_at: string;
              };
              /**
               * DeFiType
               * @description An enumeration.
               * @enum {string}
               */
              type: "liquidity" | "farming" | "locked" | "lending" | "deposit";
              /** Assets Deposited */
              assets_deposited: {
                  /** DeFiAsset */
                  asset: {
                    /** Id */
                    id: string;
                    /** Logo Url */
                    logo_url?: string;
                    /**
                     * Name
                     * @default
                     */
                    name?: string;
                    /**
                     * Symbol
                     * @default
                     */
                    symbol?: string;
                    /**
                     * Type
                     * @default
                     */
                    type?: string;
                  };
                  /** Amount */
                  amount: number;
                  /**
                   * Usd Value
                   * @default 0
                   */
                  usd_value?: number;
                }[];
              /** Assets Rewarded */
              assets_rewarded?: {
                  /** DeFiAsset */
                  asset: {
                    /** Id */
                    id: string;
                    /** Logo Url */
                    logo_url?: string;
                    /**
                     * Name
                     * @default
                     */
                    name?: string;
                    /**
                     * Symbol
                     * @default
                     */
                    symbol?: string;
                    /**
                     * Type
                     * @default
                     */
                    type?: string;
                  };
                  /** Amount */
                  amount: number;
                  /**
                   * Usd Value
                   * @default 0
                   */
                  usd_value?: number;
                }[];
              /**
               * Stats
               * @default {
               *   "usd_value": 0
               * }
               */
              stats?: {
                /**
                 * Usd Value
                 * @default 0
                 */
                usd_value?: number;
              };
            })[];
        })[];
    };
    /** ResponseGetAccountNFTs */
    ResponseGetAccountNFTs: {
      /**
       * Code
       * @default 0
       */
      code?: number;
      /**
       * Message
       * @default ok
       */
      message?: string;
      /** Data */
      data?: {
          /**
           * Contract Address
           * @description The contract address
           */
          contract_address: string;
          /**
           * Erc Type
           * @description ERC standard related to the contract.
           */
          erc_type: string;
          /**
           * Metadata
           * @description The metadata of the item.
           */
          metadata?: Record<string, never>;
          /**
           * Mint Time
           * Format: date-time
           * @description The timestamp when the item was minted.
           */
          mint_time: string;
          /**
           * Mint Transaction Hash
           * @description The block number when the item was minted.
           */
          mint_transaction_hash: string;
          /**
           * Name
           * @description The name of the item.
           */
          name: string;
          /**
           * Owner
           * @description The user address who owns the item now (null if the item is an ERC-1155 NFT).
           */
          owner: string;
          /**
           * Symbol
           * @description The symbol of the NFT contract.
           */
          symbol: string;
          /**
           * Token Id
           * @description The token ID number of the item.
           */
          token_id: string;
          /**
           * Token Uri
           * @description The token URI of the item.
           */
          token_uri: string;
          /**
           * Image Uri
           * @description The image URI of the item.
           */
          image_uri: string;
          /**
           * Total
           * @description The total amount of the item.
           */
          total: number;
          /**
           * Total String
           * @description The total amount of item in string.
           */
          total_string: string;
          /**
           * Traits
           * @description List of traits of the item.
           */
          traits?: unknown;
          /**
           * Rarity Score
           * @description The rarity score for the item.
           */
          rarity_score?: number;
          /**
           * Rarity Rank
           * @description The rarity rank for the item.
           */
          rarity_rank?: number;
          /**
           * Floor Prices
           * @description List of floor prices.
           */
          floor_prices?: {
              /**
               * Value
               * @description The ammount of the ERC-20 token.
               */
              value?: string;
              /**
               * Symbol
               * @description The symbol of the ERC-20 token.
               */
              symbol?: string;
              /**
               * Address
               * @description The address of the ERC-20 token.
               */
              address?: string;
            }[];
        }[];
      /** Next Page */
      next_page?: number;
      /** Count */
      count?: number;
    };
    /** ResponseGetAccountTokens */
    ResponseGetAccountTokens: {
      /**
       * Code
       * @default 0
       */
      code?: number;
      /**
       * Message
       * @default ok
       */
      message?: string;
      /** Data */
      data?: {
          /**
           * Contract Address
           * @description ERC-20 contract address.
           */
          contract_address: string;
          /**
           * Decimals
           * @description The number of decimals the token uses.
           */
          decimals: number;
          /**
           * Name
           * @description The name of the ERC-20 token.
           */
          name: string;
          /**
           * Symbol
           * @description The symbol of the ERC-20 token.
           */
          symbol: string;
          /**
           * Logos
           * @description List of logo images for the ERC-20 token.
           */
          logos?: {
              /**
               * Uri
               * @description URI for the logo image.
               */
              uri: string;
              /**
               * Width
               * @description The logo image's approximate width in pixels.
               */
              width: number;
              /**
               * Height
               * @description The logo image's approximate height in pixels.
               */
              height: number;
            }[];
          /**
           * Urls
           * @description List of urls for the ERC-20 token.
           */
          urls?: {
              /**
               * Name
               * @description The name of the link.
               */
              name: string;
              /**
               * Url
               * @description The URL of the link.
               */
              url: string;
            }[];
          /**
           * Current Usd Price
           * @description The current price of the ERC-20 token in USD.
           */
          current_usd_price?: number;
          /**
           * Balance
           * @description The balance of the ERC-20 token for a given wallet.
           */
          balance: string;
        }[];
      /** Next Page */
      next_page?: number;
      /** Count */
      count?: number;
    };
    /** ResponseGetBalance */
    ResponseGetBalance: {
      /**
       * Code
       * @default 0
       */
      code?: number;
      /**
       * Message
       * @default ok
       */
      message?: string;
      /** Data */
      data: string;
    };
    /** TokenMeta */
    TokenMeta: {
      /**
       * Contract Address
       * @description ERC-20 contract address.
       */
      contract_address: string;
      /**
       * Decimals
       * @description The number of decimals the token uses.
       */
      decimals: number;
      /**
       * Name
       * @description The name of the ERC-20 token.
       */
      name: string;
      /**
       * Symbol
       * @description The symbol of the ERC-20 token.
       */
      symbol: string;
      /**
       * Logos
       * @description List of logo images for the ERC-20 token.
       */
      logos?: {
          /**
           * Uri
           * @description URI for the logo image.
           */
          uri: string;
          /**
           * Width
           * @description The logo image's approximate width in pixels.
           */
          width: number;
          /**
           * Height
           * @description The logo image's approximate height in pixels.
           */
          height: number;
        }[];
      /**
       * Urls
       * @description List of urls for the ERC-20 token.
       */
      urls?: {
          /**
           * Name
           * @description The name of the link.
           */
          name: string;
          /**
           * Url
           * @description The URL of the link.
           */
          url: string;
        }[];
      /**
       * Current Usd Price
       * @description The current price of the ERC-20 token in USD.
       */
      current_usd_price?: number;
      /**
       * Balance
       * @description The balance of the ERC-20 token for a given wallet.
       */
      balance: string;
    };
    /** TokenMetaLogo */
    TokenMetaLogo: {
      /**
       * Uri
       * @description URI for the logo image.
       */
      uri: string;
      /**
       * Width
       * @description The logo image's approximate width in pixels.
       */
      width: number;
      /**
       * Height
       * @description The logo image's approximate height in pixels.
       */
      height: number;
    };
    /** TokenMetaURL */
    TokenMetaURL: {
      /**
       * Name
       * @description The name of the link.
       */
      name: string;
      /**
       * Url
       * @description The URL of the link.
       */
      url: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Get latest block number
   * @description Get the latest block height of blockchain network.
   */
  GetBlockNumberLatest: {
    parameters: {
      query: {
        /**
         * @description chain network id,
         *     see [list of details](https://docs.chainbase.com/reference/supported-chains)
         *
         * @example 1
         */
        chain_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            /**
             * Code
             * @default 0
             */
            code?: number;
            /**
             * Message
             * @default success
             */
            message?: string;
            /** GetLastBlockNumberData */
            data: {
              /** Number */
              number: number;
              /** Hash */
              hash: string;
            };
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
    };
  };
  /**
   * Get block by number
   * @description Get the detail of a block by the given block humber.
   */
  GetBlockDetail: {
    parameters: {
      query: {
        /**
         * @description chain network id,
         *     see [list of details](https://docs.chainbase.com/reference/supported-chains)
         *
         * @example 1
         */
        chain_id: number;
        /** @description Block number */
        number: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            /**
             * Code
             * @default 0
             */
            code?: number;
            /**
             * Message
             * @default success
             */
            message?: string;
            /** BlockDetail */
            data: {
              /** Number */
              number: number;
              /** Hash */
              hash: string;
              /** Parent Hash */
              parent_hash: string;
              /** Timestamp */
              timestamp: string;
              /** Difficulty */
              difficulty: string;
              /** Extra Data */
              extra_data: string;
              /** Gas Limit */
              gas_limit: number;
              /** Gas Used */
              gas_used: number;
              /** Base Fee Per Gas */
              base_fee_per_gas: number;
              /** Miner */
              miner: string;
              /** Mix Hash */
              mix_hash: string;
              /** Nonce */
              nonce: string;
              /** Receipts Root */
              receipts_root: string;
              /** Sha3 Uncles */
              sha3_uncles: string;
              /** Size */
              size: number;
              /** State Root */
              state_root: string;
              /** Transactions Root */
              transactions_root: string;
              /** Transactions Count */
              transactions_count: number;
              /** Uncles Count */
              uncles_count: number;
            };
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
    };
  };
  /**
   * Get transaction
   * @description Get the detail of a transaction given the transaction hash.
   *
   * Provide the param "hash" or ("block_number" and "tx_index"). If both params are provided,
   * "hash" will be used.
   */
  GetTxDetail: {
    parameters: {
      query: {
        /**
         * @description chain network id,
         *     see [list of details](https://docs.chainbase.com/reference/supported-chains)
         *
         * @example 1
         */
        chain_id: number;
        /**
         * @description The transaction hash
         * @example 0xea1093d492a1dcb1bef708f771a99a96ff05dcab81ca76c31940300177fcf49f
         */
        hash?: string;
        /** @description Block number of the transaction */
        block_number?: number;
        /** @description Index of the transaction */
        tx_index?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            /**
             * Code
             * @default 0
             */
            code?: number;
            /**
             * Message
             * @default success
             */
            message?: string;
            /** TxDetail */
            data: {
              /** Type */
              type: number;
              /** Status */
              status: number;
              /** Block Number */
              block_number: number;
              /** Block Timestamp */
              block_timestamp: string;
              /** Transaction Hash */
              transaction_hash: string;
              /** Transaction Index */
              transaction_index: number;
              /** From Address */
              from_address: string;
              /** To Address */
              to_address: string;
              /** Value */
              value: string;
              /** Input */
              input: string;
              /** Nonce */
              nonce: string;
              /** Contract Address */
              contract_address: string;
              /** Gas */
              gas: number;
              /** Gas Price */
              gas_price: number;
              /** Gas Used */
              gas_used: number;
              /** Effective Gas Price */
              effective_gas_price: number;
              /** Cumulative Gas Used */
              cumulative_gas_used: number;
              /** Max Fee Per Gas */
              max_fee_per_gas: number;
              /** Max Priority Fee Per Gas */
              max_priority_fee_per_gas: number;
              /** Tx Fee */
              tx_fee: number;
              /** Saving Fee */
              saving_fee: number;
              /** Burnt Fee */
              burnt_fee: number;
            };
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
    };
  };
  /**
   * Get transactions by account
   * @description Returns the transactions from the address.
   */
  GetAccountTxs: {
    parameters: {
      query: {
        /**
         * @description chain network id,
         *     see [list of details](https://docs.chainbase.com/reference/supported-chains)
         *
         * @example 1
         */
        chain_id: number;
        /**
         * @description A hex string referencing a wallet address
         * @example 0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045
         */
        address: string;
        /** @description Inclusive from block number (hex string or int) */
        from_block?: string;
        /**
         * @description Inclusive to block number (hex string, int, or 'latest')
         * @example latest
         */
        to_block?: string;
        /** @description Inclusive from block number (hex string or int) */
        from_timestamp?: number;
        /** @description Inclusive end timestamp */
        end_timestamp?: number;
        /** @description The page offset */
        page?: number;
        /** @description The desired page size limit. Less or equal than 100 */
        limit?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            /**
             * Code
             * @default 0
             */
            code?: number;
            /**
             * Message
             * @default success
             */
            message?: string;
            /** Data */
            data: {
                /** Type */
                type: number;
                /** Status */
                status: number;
                /** Block Number */
                block_number: number;
                /** Block Timestamp */
                block_timestamp: string;
                /** Transaction Hash */
                transaction_hash: string;
                /** Transaction Index */
                transaction_index: number;
                /** From Address */
                from_address: string;
                /** To Address */
                to_address: string;
                /** Value */
                value: string;
                /** Input */
                input: string;
                /** Nonce */
                nonce: string;
                /** Contract Address */
                contract_address: string;
                /** Gas */
                gas: number;
                /** Gas Price */
                gas_price: number;
                /** Gas Used */
                gas_used: number;
                /** Effective Gas Price */
                effective_gas_price: number;
                /** Cumulative Gas Used */
                cumulative_gas_used: number;
                /** Max Fee Per Gas */
                max_fee_per_gas: number;
                /** Max Priority Fee Per Gas */
                max_priority_fee_per_gas: number;
                /** Tx Fee */
                tx_fee: number;
                /** Saving Fee */
                saving_fee: number;
                /** Burnt Fee */
                burnt_fee: number;
              }[];
            /** Next Page */
            next_page?: number;
            /** Count */
            count?: number;
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
    };
  };
  /**
   * Get events by contract
   * @description Gets the list of events for the specified contract.
   */
  GetContractEvents: {
    parameters: {
      query: {
        /**
         * @description chain network id,
         *     see [list of details](https://docs.chainbase.com/reference/supported-chains)
         *
         * @example 1
         */
        chain_id: number;
        /** @description A hex string referencing a contract address */
        contract_address: string;
        /** @description Inclusive from block number (hex string or int) */
        from_block?: string;
        /**
         * @description Inclusive to block number (hex string, int, or 'latest')
         * @example latest
         */
        to_block?: string;
        /** @description Inclusive start timestamp */
        from_timestamp?: number;
        /** @description Inclusive end timestamp */
        end_timestamp?: number;
        /** @description The page offset */
        page?: number;
        /** @description The desired page size limit. Less or equal than 100 */
        limit?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            /**
             * Code
             * @default 0
             */
            code?: number;
            /**
             * Message
             * @default success
             */
            message?: string;
            /** Data */
            data: {
                /** Block Number */
                block_number: number;
                /** Function */
                function: string;
                /** Method Id */
                method_id: string;
                /** Transaction Hash */
                transaction_hash: string;
                /** Transaction Index */
                transaction_index: number;
              }[];
            /** Next Page */
            next_page?: number;
            /** Count */
            count?: number;
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
    };
  };
  /**
   * Contract call
   * @description Calls a specific function for the specified contract.
   */
  ContractCall: {
    requestBody: {
      content: {
        "application/json": {
          /** Chain Id */
          chain_id: number;
          /** Contract Address */
          contract_address: string;
          /** Function Name */
          function_name: string;
          /** Abi */
          abi: string;
          /** Params */
          params: unknown[];
          /** To Block */
          to_block: string;
        };
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            /**
             * Code
             * @default 0
             */
            code?: number;
            /**
             * Message
             * @default success
             */
            message?: string;
            /** Data */
            data: unknown[];
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
    };
  };
  /**
   * Get native token balances
   * @description Returns the balance for a specified address.
   */
  GetAccountBalance: {
    parameters: {
      query: {
        /**
         * @description chain network id, see [list of details](https://docs.chainbase.com/reference/supported-chains)
         * @example 1
         */
        chain_id: number;
        /**
         * @description A hex string referencing a wallet address
         * @example 0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045
         */
        address: string;
        /**
         * @description block decimal number, hex number or 'latest'
         * @example latest
         */
        to_block?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            /**
             * Code
             * @default 0
             */
            code?: number;
            /**
             * Message
             * @default ok
             */
            message?: string;
            /** Data */
            data: string;
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
    };
  };
  /**
   * Get ERC20 token balances
   * @description Retrieve all token balances for all ERC20 tokens for a specified address.
   *
   * By default, it will return all token balances for all ERC20 tokens that the address has ever received.
   * You can specify a contract address to check the balance of a non-standard contract.
   */
  GetAccountTokens: {
    parameters: {
      query: {
        /**
         * @description chain network id, see [list of details](https://docs.chainbase.com/reference/supported-chains)
         * @example 1
         */
        chain_id: number;
        /**
         * @description A hex string referencing a wallet address
         * @example 0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045
         */
        address: string;
        /**
         * @description The address of the token contract
         * @example 0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0
         */
        contract_address?: string;
        /**
         * @description block decimal number, hex number or 'latest'
         * @example latest
         */
        to_block?: string;
        /** @description The desired page size limit. Less or equal than 100 */
        limit?: number;
        /** @description The page offset */
        page?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            /**
             * Code
             * @default 0
             */
            code?: number;
            /**
             * Message
             * @default ok
             */
            message?: string;
            /** Data */
            data?: {
                /**
                 * Contract Address
                 * @description ERC-20 contract address.
                 */
                contract_address: string;
                /**
                 * Decimals
                 * @description The number of decimals the token uses.
                 */
                decimals: number;
                /**
                 * Name
                 * @description The name of the ERC-20 token.
                 */
                name: string;
                /**
                 * Symbol
                 * @description The symbol of the ERC-20 token.
                 */
                symbol: string;
                /**
                 * Logos
                 * @description List of logo images for the ERC-20 token.
                 */
                logos?: {
                    /**
                     * Uri
                     * @description URI for the logo image.
                     */
                    uri: string;
                    /**
                     * Width
                     * @description The logo image's approximate width in pixels.
                     */
                    width: number;
                    /**
                     * Height
                     * @description The logo image's approximate height in pixels.
                     */
                    height: number;
                  }[];
                /**
                 * Urls
                 * @description List of urls for the ERC-20 token.
                 */
                urls?: {
                    /**
                     * Name
                     * @description The name of the link.
                     */
                    name: string;
                    /**
                     * Url
                     * @description The URL of the link.
                     */
                    url: string;
                  }[];
                /**
                 * Current Usd Price
                 * @description The current price of the ERC-20 token in USD.
                 */
                current_usd_price?: number;
                /**
                 * Balance
                 * @description The balance of the ERC-20 token for a given wallet.
                 */
                balance: string;
              }[];
            /** Next Page */
            next_page?: number;
            /** Count */
            count?: number;
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
    };
  };
  /**
   * Get portfolios in the protocol owned by address
   * @description Returns a list of portfolios for the specified address.
   */
  GetAccountPortfolios: {
    parameters: {
      query: {
        /**
         * @description A hex string referencing a wallet address
         * @example 0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045
         */
        address: string;
        /** @description An array of strings to restrict results to any of the supported chains:["ethereum", "polygon"], or use network id:[1, 137] - if left empty, will default to all chains. */
        chain_id?: number[];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            /**
             * Code
             * @default 0
             */
            code?: number;
            /**
             * Message
             * @default ok
             */
            message?: string;
            /** Data */
            data: ({
                /** Id */
                id: string;
                /** Name */
                name: string;
                /** Blockchain */
                blockchain: string;
                /** Logo Url */
                logo_url?: string;
                /** Portfolios */
                portfolios: ({
                    /** Pool */
                    pool: {
                      /** Address */
                      address: string;
                      /**
                       * Created At
                       * Format: date-time
                       */
                      created_at: string;
                    };
                    /**
                     * DeFiType
                     * @description An enumeration.
                     * @enum {string}
                     */
                    type: "liquidity" | "farming" | "locked" | "lending" | "deposit";
                    /** Assets Deposited */
                    assets_deposited: {
                        /** DeFiAsset */
                        asset: {
                          /** Id */
                          id: string;
                          /** Logo Url */
                          logo_url?: string;
                          /**
                           * Name
                           * @default
                           */
                          name?: string;
                          /**
                           * Symbol
                           * @default
                           */
                          symbol?: string;
                          /**
                           * Type
                           * @default
                           */
                          type?: string;
                        };
                        /** Amount */
                        amount: number;
                        /**
                         * Usd Value
                         * @default 0
                         */
                        usd_value?: number;
                      }[];
                    /** Assets Rewarded */
                    assets_rewarded?: {
                        /** DeFiAsset */
                        asset: {
                          /** Id */
                          id: string;
                          /** Logo Url */
                          logo_url?: string;
                          /**
                           * Name
                           * @default
                           */
                          name?: string;
                          /**
                           * Symbol
                           * @default
                           */
                          symbol?: string;
                          /**
                           * Type
                           * @default
                           */
                          type?: string;
                        };
                        /** Amount */
                        amount: number;
                        /**
                         * Usd Value
                         * @default 0
                         */
                        usd_value?: number;
                      }[];
                    /**
                     * Stats
                     * @default {
                     *   "usd_value": 0
                     * }
                     */
                    stats?: {
                      /**
                       * Usd Value
                       * @default 0
                       */
                      usd_value?: number;
                    };
                  })[];
              })[];
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
    };
  };
  /**
   * Get NFTs owned by address
   * @description Get the list of NFTs owned by an account.
   */
  GetAccountNFTs: {
    parameters: {
      query: {
        /**
         * @description chain network id, see [list of details](https://docs.chainbase.com/reference/supported-chains)
         * @example 1
         */
        chain_id: number;
        /**
         * @description A hex string referencing a wallet address
         * @example 0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045
         */
        address: string;
        /**
         * @description The address of the NFT contract
         * @example 0xed5af388653567af2f388e6224dc7c4b3241c544
         */
        contract_address?: string;
        /**
         * @description block decimal number, hex number or 'latest'
         * @example latest
         */
        to_block?: string;
        /** @description The page offset */
        page?: number;
        /** @description The desired page size limit. Less or equal than 100 */
        limit?: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            /**
             * Code
             * @default 0
             */
            code?: number;
            /**
             * Message
             * @default ok
             */
            message?: string;
            /** Data */
            data?: {
                /**
                 * Contract Address
                 * @description The contract address
                 */
                contract_address: string;
                /**
                 * Erc Type
                 * @description ERC standard related to the contract.
                 */
                erc_type: string;
                /**
                 * Metadata
                 * @description The metadata of the item.
                 */
                metadata?: Record<string, never>;
                /**
                 * Mint Time
                 * Format: date-time
                 * @description The timestamp when the item was minted.
                 */
                mint_time: string;
                /**
                 * Mint Transaction Hash
                 * @description The block number when the item was minted.
                 */
                mint_transaction_hash: string;
                /**
                 * Name
                 * @description The name of the item.
                 */
                name: string;
                /**
                 * Owner
                 * @description The user address who owns the item now (null if the item is an ERC-1155 NFT).
                 */
                owner: string;
                /**
                 * Symbol
                 * @description The symbol of the NFT contract.
                 */
                symbol: string;
                /**
                 * Token Id
                 * @description The token ID number of the item.
                 */
                token_id: string;
                /**
                 * Token Uri
                 * @description The token URI of the item.
                 */
                token_uri: string;
                /**
                 * Image Uri
                 * @description The image URI of the item.
                 */
                image_uri: string;
                /**
                 * Total
                 * @description The total amount of the item.
                 */
                total: number;
                /**
                 * Total String
                 * @description The total amount of item in string.
                 */
                total_string: string;
                /**
                 * Traits
                 * @description List of traits of the item.
                 */
                traits?: unknown;
                /**
                 * Rarity Score
                 * @description The rarity score for the item.
                 */
                rarity_score?: number;
                /**
                 * Rarity Rank
                 * @description The rarity rank for the item.
                 */
                rarity_rank?: number;
                /**
                 * Floor Prices
                 * @description List of floor prices.
                 */
                floor_prices?: {
                    /**
                     * Value
                     * @description The ammount of the ERC-20 token.
                     */
                    value?: string;
                    /**
                     * Symbol
                     * @description The symbol of the ERC-20 token.
                     */
                    symbol?: string;
                    /**
                     * Address
                     * @description The address of the ERC-20 token.
                     */
                    address?: string;
                  }[];
              }[];
            /** Next Page */
            next_page?: number;
            /** Count */
            count?: number;
          };
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Unprocessable Entity */
      422: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": {
            /** Code */
            code: number;
            /** Message */
            message: string;
          };
        };
      };
    };
  };
}
